version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka-broker:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-broker
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"

  mongo_db:
    image: mongo:latest
    container_name: hero_db
    restart: always
    environment:
      MONGO_INITDB_DATABASE: hero_db
      #MONGO_INITDB_ROOT_USERNAME: admin
      #MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - "27018:27017"
    volumes:
      - hero_db:/var/lib/docker/volumes/

  mySql:
    image: mysql:8.0.32
    container_name: monster_db
    restart: always
    environment:
      MYSQL_DATABASE: monster_db
      MYSQL_ROOT_PASSWORD: password
      MYSQL_USER: admin
      MYSQL_PASSWORD: password
    ports:
      - "3307:3306"
    volumes:
      - monster_db:/var/lib/docker/volumes/

volumes:
  monster_db:
  hero_db: